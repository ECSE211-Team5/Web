.TH "ca.mcgill.ecse211.project.ColorCalibrator" 3 "Thu Nov 15 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.project.ColorCalibrator
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "enum \fBColor\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static Color \fBgetColor\fP (int r, int g, int b)"
.br
.ti -1c
.RI "static Color \fBgetColor\fP ()"
.br
.ti -1c
.RI "static void \fBsetFrequency\fP (Color c)"
.br
.ti -1c
.RI "static Color \fBgetMostFrequenct\fP ()"
.br
.ti -1c
.RI "static void \fBresetFrequency\fP ()"
.br
.ti -1c
.RI "static Color \fBgetGetColor\fP (int i)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class is used to check the color of a ring under a light sensor
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 13 of file ColorCalibrator\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "static Color ca\&.mcgill\&.ecse211\&.project\&.ColorCalibrator\&.getColor (int r, int g, int b)\fC [static]\fP"
This method returns the color of the ring currently under the light sensor
.PP
\fBParameters:\fP
.RS 4
\fIr\fP The red value to check for a ring 
.br
\fIg\fP The green value to check for a ring 
.br
\fIb\fP The blue value to check for a ring 
.RE
.PP
\fBReturns:\fP
.RS 4
A Color enumeration value 
.RE
.PP

.PP
Definition at line 40 of file ColorCalibrator\&.java\&.
.PP
.nf
40                                                     {
41     if (r>2*g && b<3 && r>lowerOrangeRBound ) {
42       currentColor = Color\&.Orange;
43     } else if (g>2*r && b<3) {
44       currentColor = Color\&.Green;
45       }else if ((r>= lowerYellowRBound && g >= lowerYellowGBound) || ((r>= 7 && r <= 9) && (g >=0 && g <= 2))) {
46       currentColor = Color\&.Yellow;
47     } else if ( (b >= lowerBlueBBound )) {
48       currentColor = Color\&.Blue;
49     } else {
50       currentColor = Color\&.Other;
51     }
52 
53     return currentColor;
54   }
.fi
.SS "static Color ca\&.mcgill\&.ecse211\&.project\&.ColorCalibrator\&.getColor ()\fC [static]\fP"
(r >= lowerGreenRBound && r <= 5) && (b >= lowerGreenBBound && b <= upperGreenBBound) && (g <= 12 && g >= 6) GREEN This method gets the last color of the ring under the light sensor
.PP
\fBReturns:\fP
.RS 4
current color detected by the lightSensor 
.RE
.PP

.PP
Definition at line 66 of file ColorCalibrator\&.java\&.
.PP
.nf
66                                  {
67     if (currentColor != null)
68       return currentColor;
69     else
70       return Color\&.Other;
71   }
.fi
.SS "static Color ca\&.mcgill\&.ecse211\&.project\&.ColorCalibrator\&.getGetColor (int i)\fC [static]\fP"

.PP
Definition at line 126 of file ColorCalibrator\&.java\&.
.PP
.nf
126                                          {
127     Color c = Color\&.Other;
128     switch (i) {
129       case 0:
130         c = Color\&.Other;
131         break;
132       case 1: 
133         c = Color\&.Blue;
134         break;
135       case 2:
136         c = Color\&.Green;
137         break;
138       case 3:
139         c = Color\&.Yellow;
140         break;
141       case 4:
142         c = Color\&.Orange;
143         break;
144     }
145     return c;
146   }
.fi
.SS "static Color ca\&.mcgill\&.ecse211\&.project\&.ColorCalibrator\&.getMostFrequenct ()\fC [static]\fP"
This method returns the most frequent colour detected from multiple samples
.PP
\fBReturns:\fP
.RS 4
most frequent colour detected 
.RE
.PP

.PP
Definition at line 101 of file ColorCalibrator\&.java\&.
.PP
.nf
101                                          {
102     Color c = Color\&.Other;
103     int frequency = colour_frequency[0];
104     for (int i = 0; i < colour_frequency\&.length; i++) {
105       if (colour_frequency[i] >= frequency) {
106         frequency = colour_frequency[i];
107         c = getGetColor(i);
108       }
109     }
110     if(frequency == 0) {
111       c = Color\&.Other;
112     }
113     resetFrequency();
114     return c;
115   }
.fi
.SS "static void ca\&.mcgill\&.ecse211\&.project\&.ColorCalibrator\&.resetFrequency ()\fC [static]\fP"
This method resets the colour_frequency array to 0 
.PP
Definition at line 121 of file ColorCalibrator\&.java\&.
.PP
.nf
121                                       {
122     for (int i = 0; i < colour_frequency\&.length; i ++) {
123       colour_frequency[i] = 0;
124     }
125   }
.fi
.SS "static void ca\&.mcgill\&.ecse211\&.project\&.ColorCalibrator\&.setFrequency (Color c)\fC [static]\fP"
This method keeps track of how many of each colour were detected by increasing the count in the array 
.PP
\fBParameters:\fP
.RS 4
\fIc\fP The Color detected by the light sensor 
.RE
.PP

.PP
Definition at line 78 of file ColorCalibrator\&.java\&.
.PP
.nf
78                                            {
79     switch (c) {
80       case Blue:
81         colour_frequency[1] ++;
82         break;
83       case Green:
84         colour_frequency[2] ++;
85         break;
86       case Yellow:
87         colour_frequency[3] ++;
88         break;
89       case Orange:
90         colour_frequency[4] ++;
91       default:
92         break;
93     }
94   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
