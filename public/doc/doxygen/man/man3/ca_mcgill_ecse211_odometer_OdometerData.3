.TH "ca.mcgill.ecse211.odometer.OdometerData" 3 "Thu Nov 29 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.odometer.OdometerData
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBca\&.mcgill\&.ecse211\&.odometer\&.Odometer\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "double [] \fBgetXYT\fP ()"
.br
.ti -1c
.RI "void \fBupdate\fP (double dx, double dy, double dtheta)"
.br
.ti -1c
.RI "void \fBsetXYT\fP (double x, double y, double theta)"
.br
.ti -1c
.RI "void \fBsetX\fP (double x)"
.br
.ti -1c
.RI "void \fBsetY\fP (double y)"
.br
.ti -1c
.RI "void \fBsetTheta\fP (double theta)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static synchronized \fBOdometerData\fP \fBgetOdometerData\fP ()  throws OdometerExceptions "
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBOdometerData\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class stores and provides thread safe access to data required used by the \fBOdometer\fP classes\&.
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 17 of file OdometerData\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ca\&.mcgill\&.ecse211\&.odometer\&.OdometerData\&.OdometerData ()\fC [protected]\fP"
This is the class constructor for the \fBOdometerData\fP class\&. It cannot be instantiated externally\&. A factory is used instead such that only one instance of this class is ever created\&. 
.PP
Definition at line 47 of file OdometerData\&.java\&.
.PP
.nf
47                            {
48     this\&.x = 0;
49     this\&.y = 0;
50     this\&.theta = 0;
51   }
.fi
.SH "Member Function Documentation"
.PP 
.SS "static synchronized \fBOdometerData\fP ca\&.mcgill\&.ecse211\&.odometer\&.OdometerData\&.getOdometerData () throws \fBOdometerExceptions\fP\fC [static]\fP"
This method returns an \fBOdometerData\fP instance and makes sure that only one instance is ever created\&.
.PP
\fBReturns:\fP
.RS 4
An \fBOdometerData\fP object 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBOdometerExceptions\fP\fP 
.RE
.PP

.PP
Definition at line 60 of file OdometerData\&.java\&.
.PP
.nf
60                                                                                       {
61     if (odoData != null) { // Return existing object
62       return odoData;
63     } else if (numberOfIntances < MAX_INSTANCES) {
64       // create object and return it
65       odoData = new OdometerData();
66       numberOfIntances += 1;
67       return odoData;
68     } else {
69       throw new OdometerExceptions("Only one intance of the Odometer can be created\&.");
70     }
71   }
.fi
.SS "double [] ca\&.mcgill\&.ecse211\&.odometer\&.OdometerData\&.getXYT ()"
This method returns the \fBOdometer\fP data consisting of the current x, y coordinates and angle (theta)\&.
.PP
\fBReturns:\fP
.RS 4
The odometer data\&. 
.RE
.PP

.PP
Definition at line 79 of file OdometerData\&.java\&.
.PP
.nf
79                            {
80     double[] position = new double[4];
81     lock\&.lock();
82     try {
83       while (isReseting) { // If a reset operation is being executed, wait
84         // until it is over\&.
85         doneReseting\&.await(); // Using await() is lighter on the CPU
86         // than simple busy wait\&.
87       }
88 
89       position[0] = x;
90       position[1] = y;
91       position[2] = theta;
92 
93     } catch (InterruptedException e) {
94       // Print exception to screen
95       e\&.printStackTrace();
96     } finally {
97       lock\&.unlock();
98     }
99 
100     return position;
101   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.odometer\&.OdometerData\&.setTheta (double theta)"
This method overrides theta\&. Used for odometry correction\&.
.PP
\fBParameters:\fP
.RS 4
\fItheta\fP The value to set the current angle (theta) to 
.RE
.PP

.PP
Definition at line 191 of file OdometerData\&.java\&.
.PP
.nf
191                                      {
192     lock\&.lock();
193     isReseting = true;
194     try {
195       this\&.theta = theta;
196       isReseting = false; // Done reseting
197       doneReseting\&.signalAll(); // Let the other threads know that you are
198                                 // done reseting
199     } finally {
200       lock\&.unlock();
201     }
202   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.odometer\&.OdometerData\&.setX (double x)"
This method overrides the x coordinate\&. Used for odometry correction\&.
.PP
\fBParameters:\fP
.RS 4
\fIx\fP The value to set the current x coordinate to 
.RE
.PP

.PP
Definition at line 155 of file OdometerData\&.java\&.
.PP
.nf
155                              {
156     lock\&.lock();
157     isReseting = true;
158     try {
159       this\&.x = x;
160       isReseting = false; // Done reseting
161       doneReseting\&.signalAll(); // Let the other threads know that you are
162                                 // done reseting
163     } finally {
164       lock\&.unlock();
165     }
166   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.odometer\&.OdometerData\&.setXYT (double x, double y, double theta)"
This method overrides the values of x, y and theta\&. Used for odometry correction\&.
.PP
\fBParameters:\fP
.RS 4
\fIx\fP The value to set the current x coordinate to 
.br
\fIy\fP The value to set the current y coordinate to 
.br
\fItheta\fP The value to set the current angle (theta) to 
.RE
.PP

.PP
Definition at line 135 of file OdometerData\&.java\&.
.PP
.nf
135                                                        {
136     lock\&.lock();
137     isReseting = true;
138     try {
139       this\&.x = x;
140       this\&.y = y;
141       this\&.theta = theta;
142       isReseting = false; // Done reseting
143       doneReseting\&.signalAll(); // Let the other threads know that you are
144                                 // done reseting
145     } finally {
146       lock\&.unlock();
147     }
148   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.odometer\&.OdometerData\&.setY (double y)"
This method overrides the y coordinate\&. Used for odometry correction\&.
.PP
\fBParameters:\fP
.RS 4
\fIy\fP The value to set the current y coordinate to 
.RE
.PP

.PP
Definition at line 173 of file OdometerData\&.java\&.
.PP
.nf
173                              {
174     lock\&.lock();
175     isReseting = true;
176     try {
177       this\&.y = y;
178       isReseting = false; // Done reseting
179       doneReseting\&.signalAll(); // Let the other threads know that you are
180                                 // done reseting
181     } finally {
182       lock\&.unlock();
183     }
184   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.odometer\&.OdometerData\&.update (double dx, double dy, double dtheta)"
This method adds dx, dy and dtheta to the current values of x, y and theta, respectively\&.
.PP
\fBParameters:\fP
.RS 4
\fIdx\fP The change in x coordinate to add to the current x coordinate 
.br
\fIdy\fP The change in y coordinate to add to the current y coordinate 
.br
\fIdtheta\fP The change in angle to add to the current angle (theta) 
.RE
.PP

.PP
Definition at line 110 of file OdometerData\&.java\&.
.PP
.nf
110                                                           {
111     lock\&.lock();
112     isReseting = true;
113     try {
114       x += dx;
115       y += dy;
116       theta = (theta + (360 + dtheta) % 360) % 360; // keeps the updates
117                                                     // within 360
118                                                     // degrees
119       isReseting = false; // Done reseting
120       doneReseting\&.signalAll(); // Let the other threads know that you are
121                                 // done reseting
122     } finally {
123       lock\&.unlock();
124     }
125 
126   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
