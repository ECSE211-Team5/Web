.TH "ca.mcgill.ecse211.project.RingSearcher" 3 "Thu Nov 29 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.project.RingSearcher
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRingSearcher\fP (EV3LargeRegulatedMotor sensorMotor, EV3LargeRegulatedMotor rodMotor)  throws OdometerExceptions "
.br
.ti -1c
.RI "void \fBsearch\fP (int angle)"
.br
.ti -1c
.RI "void \fBdetectColor\fP ()"
.br
.ti -1c
.RI "void \fBprepareSearch\fP ()"
.br
.ti -1c
.RI "void \fBfinishSearch\fP ()"
.br
.ti -1c
.RI "void \fBresetSearch\fP ()"
.br
.ti -1c
.RI "void \fBprepareRetrieve\fP ()"
.br
.ti -1c
.RI "void \fBretrieveRing\fP ()"
.br
.ti -1c
.RI "void \fBsafeRod\fP ()"
.br
.ti -1c
.RI "void \fBresetRodMotor\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class helps our robot to search for rings on a grid itself as a thread will search and retrieve the rings
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 21 of file RingSearcher\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.RingSearcher (EV3LargeRegulatedMotor sensorMotor, EV3LargeRegulatedMotor rodMotor) throws \fBOdometerExceptions\fP"
This \fBRingSearcher\fP class constructor checks if there is a ring to collect and records its color
.PP
\fBParameters:\fP
.RS 4
\fIsensorMotor\fP An EV3LargeRegulatedMotor object instance that controls a sensor motor 
.br
\fIrodMotor\fP An EV3LargeRegulatedMotor object instance that controls the rod with a light sensor for ring color detection 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIOdometerExceptions\fP 
.RE
.PP

.PP
Definition at line 43 of file RingSearcher\&.java\&.
.PP
.nf
44                                 {
45     this\&.odometer = Odometer\&.getOdometer();
46     this\&.sensorMotor = sensorMotor;
47     this\&.rodMotor = rodMotor;
48     rodMotor\&.setSpeed(ROD_SPEED);
49     this\&.sensorMotor\&.setSpeed(SENSOR_SPEED);
50     data = SensorData\&.getSensorData();
51     for (BaseRegulatedMotor motor : new BaseRegulatedMotor[] {this\&.sensorMotor, this\&.rodMotor}) {
52       motor\&.stop();
53       motor\&.setAcceleration(ACCELERATION);
54     }
55   }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.detectColor ()"
This method causes our robot to beep a certain number of times to identify what ring it is picking up 
.PP
Definition at line 70 of file RingSearcher\&.java\&.
.PP
.nf
70                             {
71     Game\&.INSTANCE\&.rgbPoller\&.setStart(true);
72     try {
73       Thread\&.sleep(1000);
74     } catch (InterruptedException e) {
75       e\&.printStackTrace();
76     }
77     // determine most frequent colour detected and beep accordingly
78     Game\&.INSTANCE\&.rgbPoller\&.setStart(false);
79     switch (ColorCalibrator\&.getMostFrequenct()) {
80       case Orange:
81         Sound\&.beep();
82         Sound\&.beep();
83         Sound\&.beep();
84         Sound\&.beep();
85         break;
86       case Yellow:
87         Sound\&.beep();
88         Sound\&.beep();
89         Sound\&.beep();
90         break;
91       case Green:
92         Sound\&.beep();
93         Sound\&.beep();
94         break;
95       case Blue:
96         Sound\&.beep();
97         break;
98       case Other:
99         break;
100       default:
101         break;
102     }
103   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.finishSearch ()"
This method indicates that our robot is done searching for a ring 
.PP
Definition at line 115 of file RingSearcher\&.java\&.
.PP
.nf
115                              {
116     sensorMotor\&.rotateTo(-100);
117   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.prepareRetrieve ()"
This method rotates the rod to a suitable position to allow a ring to be picked up 
.PP
Definition at line 129 of file RingSearcher\&.java\&.
.PP
.nf
129                                 {
130     rodMotor\&.rotateTo(ROD_PREPARE);
131   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.prepareSearch ()"
This method prepares our robot to search for a ring 
.PP
Definition at line 108 of file RingSearcher\&.java\&.
.PP
.nf
108                               {
109     sensorMotor\&.rotateTo(SENSOR_ROTATION);
110   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.resetRodMotor ()"
This method rotates the rod back to its original position 
.PP
Definition at line 150 of file RingSearcher\&.java\&.
.PP
.nf
150                               {
151     rodMotor\&.rotateTo(0);
152   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.resetSearch ()"
This method retracts our ring searching rod 
.PP
Definition at line 122 of file RingSearcher\&.java\&.
.PP
.nf
122                             {
123     sensorMotor\&.rotateTo(0);
124   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.retrieveRing ()"
This method rotates the rod to be ready to retrieve a ring 
.PP
Definition at line 136 of file RingSearcher\&.java\&.
.PP
.nf
136                              {
137     rodMotor\&.rotate(ROD_RETRIEVE);
138   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.safeRod ()"
This method rotates the rod to a safe position 
.PP
Definition at line 143 of file RingSearcher\&.java\&.
.PP
.nf
143                         {
144     rodMotor\&.rotateTo(180);
145   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.search (int angle)"
This method searches for a ring and rotates the sensorMotor rod
.PP
\fBParameters:\fP
.RS 4
\fIangle\fP An integer to rotate the motor for the sensor to 
.RE
.PP

.PP
Definition at line 62 of file RingSearcher\&.java\&.
.PP
.nf
62                                 {
63     sensorMotor\&.rotateTo(angle);
64   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
