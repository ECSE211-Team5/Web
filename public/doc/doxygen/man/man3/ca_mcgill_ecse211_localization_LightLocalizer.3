.TH "ca.mcgill.ecse211.localization.LightLocalizer" 3 "Tue Nov 27 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.localization.LightLocalizer
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLightLocalizer\fP (\fBNavigation\fP nav, EV3LargeRegulatedMotor leftMotor, EV3LargeRegulatedMotor rightMotor)  throws OdometerExceptions "
.br
.ti -1c
.RI "void \fBlocalize\fP (int[] sC)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class helps our robot to localize itself using the light sensor
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 21 of file LightLocalizer\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ca\&.mcgill\&.ecse211\&.localization\&.LightLocalizer\&.LightLocalizer (\fBNavigation\fP nav, EV3LargeRegulatedMotor leftMotor, EV3LargeRegulatedMotor rightMotor) throws \fBOdometerExceptions\fP"
This is the class constructor for the \fBLightLocalizer\fP class
.PP
\fBParameters:\fP
.RS 4
\fIleftMotor\fP An EV3LargeRegularedMotor object instance that allows control of the left motor 
.br
\fIrightMotor\fP An EV3LargeRegularedMotor object instance that allows control of the right motor 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIOdometerExceptions\fP 
.RE
.PP

.PP
Definition at line 40 of file LightLocalizer\&.java\&.
.PP
.nf
41                                                                    {
42     this\&.odometer = Odometer\&.getOdometer();
43     this\&.data = SensorData\&.getSensorData();
44     this\&.navigation = nav;
45     this\&.leftMotor = leftMotor;
46     this\&.rightMotor = rightMotor;
47   }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void ca\&.mcgill\&.ecse211\&.localization\&.LightLocalizer\&.localize (int [] sC)"
This method localizes our robot to an intersection of two black lines which serve as our origin and strives to face north\&.
.PP
\fBParameters:\fP
.RS 4
\fIsC\fP The x and y coordinates to set on our Odometer after localization 
.RE
.PP

.PP
Definition at line 55 of file LightLocalizer\&.java\&.
.PP
.nf
55                                  {
56     leftMotor\&.setSpeed(FORWARD_SPEED);
57     rightMotor\&.setSpeed(FORWARD_SPEED);
58 
59     // 1\&. GO forward find the y=0 line
60     leftMotor\&.forward();
61     rightMotor\&.forward();
62     while (leftMotor\&.isMoving() || rightMotor\&.isMoving()) {
63       if (data\&.getL()[0] < blackLineColor) {
64         leftMotor\&.stop(true);
65       }
66       if (data\&.getL()[1] < blackLineColor) {
67         rightMotor\&.stop(true);
68       }
69     }
70     odometer\&.setTheta(0\&.0);
71     Sound\&.beep();
72     odometer\&.setY(0);
73     
74     // 2\&. Turn and go forward find the x=0 line
75     navigation\&.turnTo(90);
76     leftMotor\&.setSpeed(FORWARD_SPEED);
77     rightMotor\&.setSpeed(FORWARD_SPEED);
78     leftMotor\&.forward();
79     rightMotor\&.forward();
80     while (leftMotor\&.isMoving() || rightMotor\&.isMoving()) {
81       if (data\&.getL()[0] < blackLineColor) {
82         leftMotor\&.stop(true);
83       }
84       if (data\&.getL()[1] < blackLineColor) {
85         rightMotor\&.stop(true);
86       }
87     }
88     odometer\&.setTheta(90\&.0);
89     Sound\&.beep();
90     odometer\&.setX(0);
91     leftMotor\&.setSpeed(FORWARD_SPEED);
92     rightMotor\&.setSpeed(FORWARD_SPEED);
93     
94     // 3\&. Go backwards by sensor-wheel center distance in x-direction
95     leftMotor\&.rotate(Navigation\&.convertDistance(Game\&.WHEEL_RAD, Game\&.SEN_DIS), true);
96     rightMotor\&.rotate(Navigation\&.convertDistance(Game\&.WHEEL_RAD, Game\&.SEN_DIS), false);
97     
98     // 4\&. Go backwards by sensor-wheel center distance in y-direction
99     navigation\&.turnTo(0);
100     leftMotor\&.setSpeed(FORWARD_SPEED);
101     rightMotor\&.setSpeed(FORWARD_SPEED);
102     // double sensorDistanceOffset = 2\&.5;
103     leftMotor\&.rotate(Navigation\&.convertDistance(Game\&.WHEEL_RAD, Game\&.SEN_DIS), true);
104     rightMotor\&.rotate(Navigation\&.convertDistance(Game\&.WHEEL_RAD, Game\&.SEN_DIS), false);
105     odometer\&.setTheta(0);
106     odometer\&.setX(sC[0]);
107     odometer\&.setY(sC[1]);
108   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
