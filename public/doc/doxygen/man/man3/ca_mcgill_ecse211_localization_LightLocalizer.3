.TH "ca.mcgill.ecse211.localization.LightLocalizer" 3 "Thu Nov 29 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.localization.LightLocalizer
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLightLocalizer\fP (\fBNavigation\fP nav, EV3LargeRegulatedMotor leftMotor, EV3LargeRegulatedMotor rightMotor)  throws OdometerExceptions "
.br
.ti -1c
.RI "void \fBlocalize\fP (int[] startingCoordinates)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class helps our robot to localize itself using the light sensor
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 21 of file LightLocalizer\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ca\&.mcgill\&.ecse211\&.localization\&.LightLocalizer\&.LightLocalizer (\fBNavigation\fP nav, EV3LargeRegulatedMotor leftMotor, EV3LargeRegulatedMotor rightMotor) throws \fBOdometerExceptions\fP"
This is the class constructor for the \fBLightLocalizer\fP class
.PP
\fBParameters:\fP
.RS 4
\fIleftMotor\fP An EV3LargeRegularedMotor object instance that allows control of the left motor 
.br
\fIrightMotor\fP An EV3LargeRegularedMotor object instance that allows control of the right motor 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIOdometerExceptions\fP 
.RE
.PP

.PP
Definition at line 40 of file LightLocalizer\&.java\&.
.PP
.nf
41                                                                    {
42     this\&.odometer = Odometer\&.getOdometer();
43     this\&.data = SensorData\&.getSensorData();
44     this\&.navigation = nav;
45     this\&.leftMotor = leftMotor;
46     this\&.rightMotor = rightMotor;
47   }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void ca\&.mcgill\&.ecse211\&.localization\&.LightLocalizer\&.localize (int [] startingCoordinates)"
This method localizes our robot to an intersection of two black lines which serve as our origin and strives to face north\&.
.PP
\fBParameters:\fP
.RS 4
\fIstartingCoordinates\fP The x and y coordinates to set on our Odometer after localization 
.RE
.PP

.PP
Definition at line 55 of file LightLocalizer\&.java\&.
.PP
.nf
55                                                   {
56     leftMotor\&.setSpeed(FORWARD_SPEED);
57     rightMotor\&.setSpeed(FORWARD_SPEED);
58 
59     // 1\&. GO forward find the y=0 line
60     leftMotor\&.forward();
61     rightMotor\&.forward();
62     while (leftMotor\&.isMoving() || rightMotor\&.isMoving()) {
63       if (data\&.getL()[0] < blackLineColor) {
64         leftMotor\&.stop(true);
65       }
66       if (data\&.getL()[1] < blackLineColor) {
67         rightMotor\&.stop(true);
68       }
69     }
70     odometer\&.setTheta(0\&.0);
71     Sound\&.beep();
72     odometer\&.setY(0);
73     leftMotor\&.rotate(Navigation\&.convertDistance(Game\&.WHEEL_RAD, Game\&.SEN_DIS), true);
74     rightMotor\&.rotate(Navigation\&.convertDistance(Game\&.WHEEL_RAD, Game\&.SEN_DIS), false);
75     // 2\&. Turn and go forward find the x=0 line
76     navigation\&.turnTo(90);
77     leftMotor\&.setSpeed(FORWARD_SPEED);
78     rightMotor\&.setSpeed(FORWARD_SPEED);
79     leftMotor\&.forward();
80     rightMotor\&.forward();
81     while (leftMotor\&.isMoving() || rightMotor\&.isMoving()) {
82       if (data\&.getL()[0] < blackLineColor) {
83         leftMotor\&.stop(true);
84       }
85       if (data\&.getL()[1] < blackLineColor) {
86         rightMotor\&.stop(true);
87       }
88     }
89     odometer\&.setTheta(90\&.0);
90     Sound\&.beep();
91     odometer\&.setX(0);
92     leftMotor\&.setSpeed(FORWARD_SPEED);
93     rightMotor\&.setSpeed(FORWARD_SPEED);
94 
95     // 3\&. Go backwards by sensor-wheel center distance in x-direction
96     leftMotor\&.rotate(Navigation\&.convertDistance(Game\&.WHEEL_RAD, Game\&.SEN_DIS), true);
97     rightMotor\&.rotate(Navigation\&.convertDistance(Game\&.WHEEL_RAD, Game\&.SEN_DIS), false);
98 
99     // 4\&. Go backwards by sensor-wheel center distance in y-direction
100     navigation\&.turnTo(0);
101     leftMotor\&.setSpeed(FORWARD_SPEED);
102     rightMotor\&.setSpeed(FORWARD_SPEED);
103     // double sensorDistanceOffset = 2\&.5;
104 
105     odometer\&.setTheta(0);
106     odometer\&.setX(startingCoordinates[0]);
107     odometer\&.setY(startingCoordinates[1]);
108   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
