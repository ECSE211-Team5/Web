.TH "ca.mcgill.ecse211.project.WiFi" 3 "Tue Nov 27 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.project.WiFi
.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBreadData\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class implements the ability to receive game parameters over \fBWiFi\fP
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 16 of file WiFi\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "static void ca\&.mcgill\&.ecse211\&.project\&.WiFi\&.readData ()\fC [static]\fP"
This method sets up a connection to a locally hosted server and reads \fBGame\fP Parameter values from it\&. if (\fBGameParameters\&.OPPO_UR\fP[0] - \fBGameParameters\&.OPPO_LL\fP[0] < 2 || \fBGameParameters\&.OPPO_UR\fP[0] - \fBGameParameters\&.OPPO_LL\fP[0] > 8 || \fBGameParameters\&.OPPO_UR\fP[1] - \fBGameParameters\&.OPPO_LL\fP[1] < 2 || \fBGameParameters\&.OPPO_UR\fP[1] - \fBGameParameters\&.OPPO_LL\fP[1] > 8) { throw new Exception('Green zone coordinates out of bounds'); }
.PP
if (\fBGameParameters\&.Island_UR\fP[0] - \fBGameParameters\&.Island_LL\fP[0] < 2 || \fBGameParameters\&.Island_UR\fP[0] - \fBGameParameters\&.Island_LL\fP[0] > 8 || \fBGameParameters\&.Island_UR\fP[1] - \fBGameParameters\&.Island_LL\fP[1] < 2 || \fBGameParameters\&.Island_UR\fP[1] - \fBGameParameters\&.Island_LL\fP[1] > 8) { throw new Exception('Green zone coordinates out of bounds'); }
.PP
if (\fBGameParameters\&.TTEE_O\fP[0] < 0 || \fBGameParameters\&.TTEE_O\fP[0] > 7 || \fBGameParameters\&.TTEE_O\fP[1] < 0 || \fBGameParameters\&.TTEE_O\fP[1] > 7) { throw new Exception('Green tree coordinates out of bounds'); }
.PP
if (\fBGameParameters\&.US_UR\fP[0] - \fBGameParameters\&.US_LL\fP[0] < 2 || \fBGameParameters\&.US_UR\fP[0] - \fBGameParameters\&.US_LL\fP[0] > 10 || \fBGameParameters\&.US_UR\fP[1] - \fBGameParameters\&.US_LL\fP[1] < 2 || \fBGameParameters\&.US_UR\fP[1] - \fBGameParameters\&.US_LL\fP[1] > 10) { throw new Exception('Red zone
coordinates out of bounds'); }
.PP
if (\fBGameParameters\&.OPPO_UR\fP[0] - \fBGameParameters\&.OPPO_LL\fP[0] < 2 || \fBGameParameters\&.OPPO_UR\fP[0] - \fBGameParameters\&.OPPO_LL\fP[0] > 10 || \fBGameParameters\&.OPPO_UR\fP[1] - \fBGameParameters\&.OPPO_LL\fP[1] < 2 || \fBGameParameters\&.OPPO_UR\fP[1] - \fBGameParameters\&.OPPO_LL\fP[1] > 10) { throw new Exception('Green zone coordinates out of bounds'); }
.PP
if (\fBGameParameters\&.Island_UR\fP[0] - \fBGameParameters\&.Island_LL\fP[0] < 2 || \fBGameParameters\&.Island_UR\fP[0] - \fBGameParameters\&.Island_LL\fP[0] > 10 || \fBGameParameters\&.Island_UR\fP[1] - \fBGameParameters\&.Island_LL\fP[1] < 2 || \fBGameParameters\&.Island_UR\fP[1] - \fBGameParameters\&.Island_LL\fP[1] > 10) { throw new Exception('Island zone coordinates out of bounds'); }
.PP
if (\fBGameParameters\&.TN_UR\fP[0] - \fBGameParameters\&.TN_LL\fP[0] < 1 || \fBGameParameters\&.TN_UR\fP[0] - \fBGameParameters\&.TN_LL\fP[0] > 2 || \fBGameParameters\&.TN_UR\fP[1] - \fBGameParameters\&.TN_LL\fP[1] < 1 || \fBGameParameters\&.TN_UR\fP[1] - \fBGameParameters\&.TN_LL\fP[1] > 2) { throw new Exception('Red tunnel
coordinates out of bounds'); }
.PP
if (\fBGameParameters\&.TREE_US\fP[0] < 0 || \fBGameParameters\&.TREE_US\fP[0] > 14 || \fBGameParameters\&.TREE_US\fP[1] < 0 || \fBGameParameters\&.TREE_US\fP[1] > 8) { throw new Exception('Red tree coordinates out of bounds'); }
.PP
if (\fBGameParameters\&.TTEE_O\fP[0] < 0 || \fBGameParameters\&.TTEE_O\fP[0] > 14 || \fBGameParameters\&.TTEE_O\fP[1] < 0 || \fBGameParameters\&.TTEE_O\fP[1] > 8) { throw new Exception('Green tree coordinates out of bounds'); }
.PP
Definition at line 26 of file WiFi\&.java\&.
.PP
.nf
26                                 {
27     WifiConnection connection =
28         new WifiConnection(SERVER_IP, GameParameters\&.PlayerTeamNumber, true);
29 
30     try {
31       /*
32        * getData() will connect to the server and wait until the user/TA presses the "Start" button
33        * in the GUI on their laptop with the data filled in\&. Once it's waiting, you can kill it by
34        * pressing the upper left hand corner button (back/escape) on the EV3\&. getData() will throw
35        * exceptions if it can't connect to the server (e\&.g\&. wrong IP address, server not running on
36        * laptop, not connected to WiFi router, etc\&.)\&. It will also throw an exception if it connects
37        * but receives corrupted data or a message from the server saying something went wrong\&. For
38        * example, if TEAM_NUMBER is set to 1 above but the server expects teams 17 and 5, this robot
39        * will receive a message saying an invalid team number was specified and getData() will throw
40        * an exception letting you know\&.
41        */
42       Map data = connection\&.getData();
43       String tunnelUs = "TNR_";
44       String tunnelO = "TNG_";
45       String ringUs = "TR_";
46       String ringO = "TG_";
47       String startingUs = "Red_";
48       String startingO = "Green_";
49       String cornerUs = "RedCorner";
50       String cornerO = "GreenCorner";
51 
52       GameParameters\&.RedTeam = ((Long) data\&.get("RedTeam"))\&.intValue();
53       GameParameters\&.GreenTeam = ((Long) data\&.get("GreenTeam"))\&.intValue();
54 
55       if (GameParameters\&.RedTeam == GameParameters\&.PlayerTeamNumber) {
56       } else if (GameParameters\&.GreenTeam == GameParameters\&.PlayerTeamNumber) {
57         System\&.out\&.println("GREEEN");
58         String s = tunnelO;
59         tunnelO = tunnelUs;
60         tunnelUs = s;
61         // change ring set
62         s = ringO;
63         ringO = ringUs;
64         ringUs = s;
65         // change starting corner
66         s = startingO;
67         startingO = startingUs;
68         startingUs = s;
69         // change corner
70         s = cornerO;
71         cornerO = cornerUs;
72         cornerUs = s;
73 
74       } else {
75         throw new Exception("Bad Team Number");
76       }
77 
78 
79       GameParameters\&.UsCorner = ((Long) data\&.get(cornerUs))\&.intValue();
80       GameParameters\&.OCorner = ((Long) data\&.get(cornerO))\&.intValue();
81 
82       GameParameters\&.US_LL[0] = ((Long) data\&.get(startingUs + "LL_x"))\&.intValue();
83       GameParameters\&.US_LL[1] = ((Long) data\&.get(startingUs + "LL_y"))\&.intValue();
84       GameParameters\&.US_UR[0] = ((Long) data\&.get(startingUs + "UR_x"))\&.intValue();
85       GameParameters\&.US_UR[1] = ((Long) data\&.get(startingUs + "UR_y"))\&.intValue();
86 
87       GameParameters\&.OPPO_LL[0] = ((Long) data\&.get(startingO + "LL_x"))\&.intValue();
88       GameParameters\&.OPPO_LL[1] = ((Long) data\&.get(startingO + "LL_y"))\&.intValue();
89       GameParameters\&.OPPO_UR[0] = ((Long) data\&.get(startingO + "UR_x"))\&.intValue();
90       GameParameters\&.OPPO_UR[1] = ((Long) data\&.get(startingO + "UR_y"))\&.intValue();
91 
92       GameParameters\&.Island_LL[0] = ((Long) data\&.get("Island_LL_x"))\&.intValue();
93       GameParameters\&.Island_LL[1] = ((Long) data\&.get("Island_LL_y"))\&.intValue();
94       GameParameters\&.Island_UR[0] = ((Long) data\&.get("Island_UR_x"))\&.intValue();
95       GameParameters\&.Island_UR[1] = ((Long) data\&.get("Island_UR_y"))\&.intValue();
96 
97       GameParameters\&.TN_LL[0] = ((Long) data\&.get(tunnelUs + "LL_x"))\&.intValue();
98       GameParameters\&.TN_LL[1] = ((Long) data\&.get(tunnelUs + "LL_y"))\&.intValue();
99       GameParameters\&.TN_UR[0] = ((Long) data\&.get(tunnelUs + "UR_x"))\&.intValue();
100       GameParameters\&.TN_UR[1] = ((Long) data\&.get(tunnelUs + "UR_y"))\&.intValue();
101       System\&.out\&.println(" GameParameters\&.TN_LL[0] " + GameParameters\&.TN_LL[0]);
102       System\&.out\&.println(" GameParameters\&.TN_LL[1] " + GameParameters\&.TN_LL[1]);
103       System\&.out\&.println(" GameParameters\&.TN_UR[0] " + GameParameters\&.TN_UR[0]);
104       System\&.out\&.println(" GameParameters\&.TN_UR[1] " + GameParameters\&.TN_UR[1]);
105 
106 
107       GameParameters\&.TNO_LL[0] = ((Long) data\&.get(tunnelO + "LL_x"))\&.intValue();
108       GameParameters\&.TNO_LL[1] = ((Long) data\&.get(tunnelO + "LL_y"))\&.intValue();
109       GameParameters\&.TNO_UR[0] = ((Long) data\&.get(tunnelO + "UR_x"))\&.intValue();
110       GameParameters\&.TNO_UR[1] = ((Long) data\&.get(tunnelO + "UR_y"))\&.intValue();
111 
112       GameParameters\&.TREE_US[0] = ((Long) data\&.get(ringUs + "x"))\&.intValue();
113       GameParameters\&.TREE_US[1] = ((Long) data\&.get(ringUs + "y"))\&.intValue();
114 
115       GameParameters\&.TTEE_O[0] = ((Long) data\&.get(ringO + "x"))\&.intValue();
116       GameParameters\&.TTEE_O[1] = ((Long) data\&.get(ringO + "y"))\&.intValue();
117 
118       if (GameParameters\&.Demo == GameParameters\&.DemoType\&.Beta) {
119         GameParameters\&.Grid_UR[0] = 8;
120         GameParameters\&.Grid_UR[1] = 8;
121 
122         switch (GameParameters\&.UsCorner) {
123           case 0:
124             int[] sc0 = {1, 1, 0};
125             GameParameters\&.SC = sc0;
126             int[] scus0 = {0, 0};
127             GameParameters\&.SCUS = scus0;
128             break;
129           case 1:
130             int[] sc1 = {7, 1, 270};
131             GameParameters\&.SC = sc1;
132             int[] scus1 = {8, 0};
133             GameParameters\&.SCUS = scus1;
134             break;
135           case 2:
136             int[] sc2 = {7, 7, 180};
137             GameParameters\&.SC = sc2;
138             int[] scus2 = {8, 8};
139             GameParameters\&.SCUS = scus2;
140             break;
141           case 3:
142             int[] sc3 = {1, 7, 90};
143             GameParameters\&.SC = sc3;
144             int[] scus3 = {0, 8};
145             GameParameters\&.SCUS = scus3;
146             break;
147         }
165       } else {
166         GameParameters\&.Grid_UR[0] = 15;
167         GameParameters\&.Grid_UR[1] = 9;
168 
169         switch (GameParameters\&.UsCorner) {
170           case 0:
171             int[] sc0 = {1, 1, 0};
172             GameParameters\&.SC = sc0;
173             int[] scus0 = {0, 0};
174             GameParameters\&.SCUS = scus0;
175             break;
176           case 1:
177             int[] sc1 = {14, 1, 270};
178             GameParameters\&.SC = sc1;
179             int[] scus1 = {15, 0};
180             GameParameters\&.SCUS = scus1;
181             break;
182           case 2:
183             int[] sc2 = {14, 8, 180};
184             GameParameters\&.SC = sc2;
185             int[] scus2 = {15, 9};
186             GameParameters\&.SCUS = scus2;
187             break;
188           case 3:
189             int[] sc3 = {1, 8, 90};
190             GameParameters\&.SC = sc3;
191             int[] scus3 = {0, 9};
192             GameParameters\&.SCUS = scus3;
193             break;
194         }
226       }
227 
228       // set data read to true
229     } catch (Exception e) {
230       e\&.printStackTrace();
231     }
232   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
