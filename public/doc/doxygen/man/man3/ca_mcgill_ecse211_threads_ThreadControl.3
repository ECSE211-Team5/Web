.TH "ca.mcgill.ecse211.threads.ThreadControl" 3 "Thu Nov 8 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.threads.ThreadControl
.SH SYNOPSIS
.br
.PP
.PP
Inherits Runnable\&.
.PP
Inherited by \fBca\&.mcgill\&.ecse211\&.threads\&.LightPoller\fP, \fBca\&.mcgill\&.ecse211\&.threads\&.RingSearcher\fP, and \fBca\&.mcgill\&.ecse211\&.threads\&.UltrasonicPoller\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "synchronized void \fBrun\fP ()"
.br
.ti -1c
.RI "synchronized boolean \fBisStarted\fP ()"
.br
.ti -1c
.RI "synchronized void \fBsetStart\fP (boolean start)"
.br
.ti -1c
.RI "void \fBwaitForThisThread\fP ()"
.br
.ti -1c
.RI "boolean \fBshouldWait\fP ()"
.br
.ti -1c
.RI "void \fBsetWait\fP (boolean \fBshouldWait\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "abstract void \fBrunMethod\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "boolean \fBisStarted\fP"
.br
.ti -1c
.RI "Object \fBlockObject\fP = new Object()"
.br
.ti -1c
.RI "boolean \fBshouldWait\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static int \fBWAIT_TIME\fP = 100"
.br
.in -1c
.SH "Detailed Description"
.PP 
class for thread control with pause and restart functionality 
.PP
Definition at line 9 of file ThreadControl\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "synchronized boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.isStarted ()"
check if this poller thread is running 
.PP
\fBReturns:\fP
.RS 4
: true if the thread is running, false if the thread is paused 
.RE
.PP

.PP
Definition at line 39 of file ThreadControl\&.java\&.
.PP
.nf
39                                           {
40     return this\&.isStarted;
41   }
.fi
.SS "synchronized void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.run ()"
run method implemented from Runnable class, this run method implements the functionality to pause and restart the thread 
.PP
Definition at line 19 of file ThreadControl\&.java\&.
.PP
.nf
19                                  {
20     try {
21       while (true) {
22         if (!isStarted) {
23           Sound\&.beepSequence();
24           wait();
25         } else {
26           runMethod();
27           wait(WAIT_TIME);
28         }
29       }
30     } catch (InterruptedException e) {
31       e\&.printStackTrace();
32     }
33   }
.fi
.SS "abstract void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.runMethod ()\fC [abstract]\fP, \fC [protected]\fP"

.SS "synchronized void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.setStart (boolean start)"
start a paused thread or stop a runing thread 
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP 
.RE
.PP

.PP
Definition at line 47 of file ThreadControl\&.java\&.
.PP
.nf
47                                                    {
48     isStarted = start;
49     notify();
50   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.setWait (boolean shouldWait)"
set if other thread shouldWait for this thread 
.PP
\fBParameters:\fP
.RS 4
\fIshouldWait\fP 
.RE
.PP

.PP
Definition at line 80 of file ThreadControl\&.java\&.
.PP
.nf
80                                           {
81     synchronized(lockObject) {
82       this\&.shouldWait = shouldWait;
83       
84       if(!shouldWait) lockObject\&.notifyAll();
85     }
86   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.shouldWait ()"
get shouldWait for this thread 
.PP
\fBReturns:\fP
.RS 4
: shouldWait 
.RE
.PP

.PP
Definition at line 70 of file ThreadControl\&.java\&.
.PP
.nf
70                               {
71     synchronized(lockObject) {
72       return shouldWait;
73     }
74   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.waitForThisThread ()"
wait for this thread until shouldWait is false 
.PP
Definition at line 55 of file ThreadControl\&.java\&.
.PP
.nf
55                                   {
56     synchronized(lockObject) {
57       try {
58         lockObject\&.wait();
59       } catch (InterruptedException e) {
60         // TODO Auto-generated catch block
61         e\&.printStackTrace();
62       }
63     }
64   }
.fi
.SH "Member Data Documentation"
.PP 
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.isStarted\fC [protected]\fP"

.PP
Definition at line 11 of file ThreadControl\&.java\&.
.SS "Object ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.lockObject = new Object()\fC [protected]\fP"

.PP
Definition at line 12 of file ThreadControl\&.java\&.
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.shouldWait\fC [protected]\fP"

.PP
Definition at line 13 of file ThreadControl\&.java\&.
.SS "int ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.WAIT_TIME = 100\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 10 of file ThreadControl\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
