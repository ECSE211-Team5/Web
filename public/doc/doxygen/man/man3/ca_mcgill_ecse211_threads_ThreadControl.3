.TH "ca.mcgill.ecse211.threads.ThreadControl" 3 "Tue Nov 27 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.threads.ThreadControl
.SH SYNOPSIS
.br
.PP
.PP
Inherits Runnable\&.
.PP
Inherited by \fBca\&.mcgill\&.ecse211\&.threads\&.LightPoller\fP, and \fBca\&.mcgill\&.ecse211\&.threads\&.UltrasonicPoller\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "synchronized void \fBrun\fP ()"
.br
.ti -1c
.RI "synchronized boolean \fBisStarted\fP ()"
.br
.ti -1c
.RI "synchronized void \fBsetStart\fP (boolean start)"
.br
.ti -1c
.RI "void \fBwaitForThisThread\fP ()"
.br
.ti -1c
.RI "boolean \fBshouldWait\fP ()"
.br
.ti -1c
.RI "void \fBsetWait\fP (boolean \fBshouldWait\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "abstract void \fBrunMethod\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "boolean \fBisStarted\fP"
.br
.ti -1c
.RI "Object \fBlockObject\fP = new Object()"
.br
.ti -1c
.RI "boolean \fBshouldWait\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static int \fBWAIT_TIME\fP = 100"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class for thread control with pause and restart functionality
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 13 of file ThreadControl\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "synchronized boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.isStarted ()"
check if this poller thread is running
.PP
\fBReturns:\fP
.RS 4
: true if the thread is running, false if the thread is paused 
.RE
.PP

.PP
Definition at line 44 of file ThreadControl\&.java\&.
.PP
.nf
44                                           {
45     return this\&.isStarted;
46   }
.fi
.SS "synchronized void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.run ()"
run method implemented from Runnable class, this run method implements the functionality to pause and restart the thread 
.PP
Definition at line 23 of file ThreadControl\&.java\&.
.PP
.nf
23                                  {
24     try {
25       while (true) {
26         if (!isStarted) {
27           // Sound\&.beepSequence();
28           wait();
29         } else {
30           runMethod();
31           wait(WAIT_TIME);
32         }
33       }
34     } catch (InterruptedException e) {
35       e\&.printStackTrace();
36     }
37   }
.fi
.SS "abstract void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.runMethod ()\fC [abstract]\fP, \fC [protected]\fP"

.SS "synchronized void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.setStart (boolean start)"
start a paused thread or stop a runing thread
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP 
.RE
.PP

.PP
Definition at line 53 of file ThreadControl\&.java\&.
.PP
.nf
53                                                    {
54     isStarted = start;
55     notify();
56   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.setWait (boolean shouldWait)"
set if other thread shouldWait for this thread
.PP
\fBParameters:\fP
.RS 4
\fIshouldWait\fP 
.RE
.PP

.PP
Definition at line 87 of file ThreadControl\&.java\&.
.PP
.nf
87                                           {
88     synchronized (lockObject) {
89       this\&.shouldWait = shouldWait;
90 
91       if (!shouldWait)
92         lockObject\&.notifyAll();
93     }
94   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.shouldWait ()"
get shouldWait for this thread
.PP
\fBReturns:\fP
.RS 4
: shouldWait 
.RE
.PP

.PP
Definition at line 76 of file ThreadControl\&.java\&.
.PP
.nf
76                               {
77     synchronized (lockObject) {
78       return shouldWait;
79     }
80   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.waitForThisThread ()"
wait for this thread until shouldWait is false 
.PP
Definition at line 61 of file ThreadControl\&.java\&.
.PP
.nf
61                                   {
62     synchronized (lockObject) {
63       try {
64         lockObject\&.wait();
65       } catch (InterruptedException e) {
66         e\&.printStackTrace();
67       }
68     }
69   }
.fi
.SH "Member Data Documentation"
.PP 
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.isStarted\fC [protected]\fP"

.PP
Definition at line 15 of file ThreadControl\&.java\&.
.SS "Object ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.lockObject = new Object()\fC [protected]\fP"

.PP
Definition at line 16 of file ThreadControl\&.java\&.
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.shouldWait\fC [protected]\fP"

.PP
Definition at line 17 of file ThreadControl\&.java\&.
.SS "int ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.WAIT_TIME = 100\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 14 of file ThreadControl\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
