.TH "ca.mcgill.ecse211.threads.ThreadControl" 3 "Thu Nov 29 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.threads.ThreadControl
.SH SYNOPSIS
.br
.PP
.PP
Inherits Runnable\&.
.PP
Inherited by \fBca\&.mcgill\&.ecse211\&.threads\&.LightPoller\fP, and \fBca\&.mcgill\&.ecse211\&.threads\&.UltrasonicPoller\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "synchronized void \fBrun\fP ()"
.br
.ti -1c
.RI "synchronized boolean \fBisStarted\fP ()"
.br
.ti -1c
.RI "synchronized void \fBsetStart\fP (boolean start)"
.br
.ti -1c
.RI "void \fBwaitForThisThread\fP ()"
.br
.ti -1c
.RI "boolean \fBshouldWait\fP ()"
.br
.ti -1c
.RI "void \fBsetWait\fP (boolean \fBshouldWait\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "abstract void \fBrunMethod\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "boolean \fBisStarted\fP"
.br
.ti -1c
.RI "Object \fBlockObject\fP = new Object()"
.br
.ti -1c
.RI "boolean \fBshouldWait\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static int \fBWAIT_TIME\fP = 100"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class controls threads by providing the functionality to pause and restart them
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 13 of file ThreadControl\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "synchronized boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.isStarted ()"
This method checks if this thread has been previously started
.PP
\fBReturns:\fP
.RS 4
A boolean denoting true if the thread is running, false otherwise 
.RE
.PP

.PP
Definition at line 43 of file ThreadControl\&.java\&.
.PP
.nf
43                                           {
44     return this\&.isStarted;
45   }
.fi
.SS "synchronized void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.run ()"
This method implements the functionality to run a thread 
.PP
Definition at line 22 of file ThreadControl\&.java\&.
.PP
.nf
22                                  {
23     try {
24       while (true) {
25         if (!isStarted) {
26           // Sound\&.beepSequence();
27           wait();
28         } else {
29           runMethod();
30           wait(WAIT_TIME);
31         }
32       }
33     } catch (InterruptedException e) {
34       e\&.printStackTrace();
35     }
36   }
.fi
.SS "abstract void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.runMethod ()\fC [abstract]\fP, \fC [protected]\fP"

.SS "synchronized void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.setStart (boolean start)"
This method starts a paused thread
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP A boolean to set the current thread status 
.RE
.PP

.PP
Definition at line 52 of file ThreadControl\&.java\&.
.PP
.nf
52                                                    {
53     isStarted = start;
54     notify();
55   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.setWait (boolean shouldWait)"
This method sets the variable shouldWait for this thread
.PP
\fBParameters:\fP
.RS 4
\fIshouldWait\fP A boolean variable to decide whether other threads should wait for this thread 
.RE
.PP

.PP
Definition at line 87 of file ThreadControl\&.java\&.
.PP
.nf
87                                           {
88     synchronized (lockObject) {
89       this\&.shouldWait = shouldWait;
90 
91       if (!shouldWait)
92         lockObject\&.notifyAll();
93     }
94   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.shouldWait ()"
This method returns the variable shouldWait
.PP
\fBReturns:\fP
.RS 4
A boolean variable called shouldWait 
.RE
.PP

.PP
Definition at line 75 of file ThreadControl\&.java\&.
.PP
.nf
75                               {
76     synchronized (lockObject) {
77       return shouldWait;
78     }
79   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.waitForThisThread ()"
This method waits for this thread to finish 
.PP
Definition at line 60 of file ThreadControl\&.java\&.
.PP
.nf
60                                   {
61     synchronized (lockObject) {
62       try {
63         lockObject\&.wait();
64       } catch (InterruptedException e) {
65         e\&.printStackTrace();
66       }
67     }
68   }
.fi
.SH "Member Data Documentation"
.PP 
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.isStarted\fC [protected]\fP"

.PP
Definition at line 15 of file ThreadControl\&.java\&.
.SS "Object ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.lockObject = new Object()\fC [protected]\fP"

.PP
Definition at line 16 of file ThreadControl\&.java\&.
.SS "boolean ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.shouldWait\fC [protected]\fP"

.PP
Definition at line 17 of file ThreadControl\&.java\&.
.SS "int ca\&.mcgill\&.ecse211\&.threads\&.ThreadControl\&.WAIT_TIME = 100\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 14 of file ThreadControl\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
