.TH "ca.mcgill.ecse211.project.GameUtil" 3 "Mon Nov 26 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.project.GameUtil
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBPathFinder\fP"
.br
.ti -1c
.RI "class \fBRingSetComparator\fP"
.br
.ti -1c
.RI "class \fBRobotComparator\fP"
.br
.ti -1c
.RI "class \fBStartingComparator\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static boolean \fBisSafe\fP (int[] coor)"
.br
.ti -1c
.RI "static double [] \fBaverage\fP (int[] p1, int[] p2)"
.br
.ti -1c
.RI "static double \fBdistanceFrom\fP (int x, int y, double[] position)"
.br
.ti -1c
.RI "static int \fBfindClosestPointToRobot\fP (int[][] points)"
.br
.ti -1c
.RI "static boolean \fBisIslandBoundary\fP (int[] coor)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static PathFinder \fBstartingFinder\fP"
.br
.ti -1c
.RI "static PathFinder \fBsearchingFinder\fP"
.br
.ti -1c
.RI "static char \fBleftInstruction\fP = 'L'"
.br
.ti -1c
.RI "static char \fBrightInstruction\fP = 'R'"
.br
.ti -1c
.RI "static char \fBupInstruction\fP = 'U'"
.br
.ti -1c
.RI "static char \fBdownInstruction\fP = 'D'"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBGame\fP utility class with handy functionalities can be used in the game
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 20 of file GameUtil\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "static double [] ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.average (int [] p1, int [] p2)\fC [static]\fP"
find the average of the two coordinates
.PP
\fBParameters:\fP
.RS 4
\fIp1\fP 
.br
\fIp2\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 269 of file GameUtil\&.java\&.
.PP
.nf
269                                                      {
270     double[] result = new double[2];
271     result[0] = (double) (p1[0] + p2[0]) / 2;
272     result[1] = (double) (p1[1] + p2[1]) / 2;
273     return result;
274   }
.fi
.SS "static double ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.distanceFrom (int x, int y, double [] position)\fC [static]\fP"
find the distance from the starting point to two points
.PP
\fBParameters:\fP
.RS 4
\fIx\fP 
.br
\fIy\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 283 of file GameUtil\&.java\&.
.PP
.nf
283                                                                      {
284       return (Math\&.pow(Math\&.round(position[0]) - x, 2) + Math\&.pow(Math\&.round(position[1]) - y, 2));
285   }
.fi
.SS "static int ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.findClosestPointToRobot (int points[][])\fC [static]\fP"
find closest point from a set of points
.PP
\fBParameters:\fP
.RS 4
\fIpoints\fP a set of points 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 293 of file GameUtil\&.java\&.
.PP
.nf
293                                                             {
294     int minIndex = 0;
295     double distance = Integer\&.MAX_VALUE;
296 
297     for (int i = 0; i < points\&.length; i++) {
298       try {
299         double[] point = Odometer\&.getOdometer()\&.getXYT();
300         double thisDistance = distanceFrom(points[i][0], points[i][1], point);
301         if (thisDistance < distance) {
302           minIndex = i;
303           distance = thisDistance;
304         }
305       } catch (OdometerExceptions e) {
306         // TODO Auto-generated catch block
307         e\&.printStackTrace();
308       }
309     }
310     return minIndex;
311   }
.fi
.SS "static boolean ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.isIslandBoundary (int [] coor)\fC [static]\fP"
Check if a given point is boundary 
.PP
\fBParameters:\fP
.RS 4
\fIcoor\fP the point to input 
.RE
.PP
\fBReturns:\fP
.RS 4
: whether the given point is on the boundary of an island 
.RE
.PP

.PP
Definition at line 318 of file GameUtil\&.java\&.
.PP
.nf
318                                                      {
319     int x = coor[0];
320     int y = coor[1];
321     boolean onLY = x == GameParameters\&.Island_LL[0]
322         && (y >= GameParameters\&.Island_LL[1] && y <= GameParameters\&.Island_UR[1]);
323     boolean onRY = x == GameParameters\&.Island_UR[0]
324         && (y >= GameParameters\&.Island_LL[1] && y <= GameParameters\&.Island_UR[1]);
325     boolean onLX = y == GameParameters\&.Island_LL[1]
326         && (x >= GameParameters\&.Island_LL[0] && x <= GameParameters\&.Island_UR[0]);
327     boolean onUX = y == GameParameters\&.Island_UR[1]
328         && (x >= GameParameters\&.Island_LL[0] && x <= GameParameters\&.Island_UR[0]);
329 
330     return onLY || onRY || onLX || onUX;
331   }
.fi
.SS "static boolean ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.isSafe (int [] coor)\fC [static]\fP"
check if one coordinate is safe based on (it is not a wall, tree or inside a tunnel)
.PP
\fBParameters:\fP
.RS 4
\fIcoor\fP coordinate array 
.RE
.PP
\fBReturns:\fP
.RS 4
: true if safe, false otherwise 
.RE
.PP

.PP
Definition at line 248 of file GameUtil\&.java\&.
.PP
.nf
248                                            {
249     int x = coor[0];
250     int y = coor[1];
251     boolean inTunnel = x >= GameParameters\&.TN_LL[0] && x <= GameParameters\&.TN_UR[0]
252         && y >= GameParameters\&.TN_LL[1] && y <= GameParameters\&.TN_UR[1];
253     boolean isTree = x == GameParameters\&.TREE_US[0] && y == GameParameters\&.TREE_US[1];
254     boolean outBound =
255         x <= 0 || x >= GameParameters\&.Grid_UR[0] || y <= 0 || y >= GameParameters\&.Grid_UR[1];
256     if (inTunnel || isTree || outBound) {
257       return false;
258     }
259     return true;
260   }
.fi
.SH "Member Data Documentation"
.PP 
.SS "char ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.downInstruction = 'D'\fC [static]\fP"

.PP
Definition at line 26 of file GameUtil\&.java\&.
.SS "char ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.leftInstruction = 'L'\fC [static]\fP"

.PP
Definition at line 23 of file GameUtil\&.java\&.
.SS "char ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.rightInstruction = 'R'\fC [static]\fP"

.PP
Definition at line 24 of file GameUtil\&.java\&.
.SS "PathFinder ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.searchingFinder\fC [static]\fP"

.PP
Definition at line 22 of file GameUtil\&.java\&.
.SS "PathFinder ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.startingFinder\fC [static]\fP"

.PP
Definition at line 21 of file GameUtil\&.java\&.
.SS "char ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.upInstruction = 'U'\fC [static]\fP"

.PP
Definition at line 25 of file GameUtil\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
