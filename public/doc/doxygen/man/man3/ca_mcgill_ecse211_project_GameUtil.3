.TH "ca.mcgill.ecse211.project.GameUtil" 3 "Tue Nov 27 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.project.GameUtil
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBPathFinder\fP"
.br
.ti -1c
.RI "class \fBRingSetComparator\fP"
.br
.ti -1c
.RI "class \fBRobotComparator\fP"
.br
.ti -1c
.RI "class \fBStartingComparator\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static boolean \fBisSafe\fP (int[] coor)"
.br
.ti -1c
.RI "static double [] \fBaverage\fP (int[] p1, int[] p2)"
.br
.ti -1c
.RI "static double \fBdistanceFrom\fP (int x, int y, double[] position)"
.br
.ti -1c
.RI "static int \fBfindClosestPointToRobot\fP (int[][] points)"
.br
.ti -1c
.RI "static boolean \fBisIslandBoundary\fP (int[] coor)"
.br
.ti -1c
.RI "static void \fBplayMusic\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static PathFinder \fBstartingFinder\fP"
.br
.ti -1c
.RI "static PathFinder \fBsearchingFinder\fP"
.br
.ti -1c
.RI "static char \fBleftInstruction\fP = 'L'"
.br
.ti -1c
.RI "static char \fBrightInstruction\fP = 'R'"
.br
.ti -1c
.RI "static char \fBupInstruction\fP = 'U'"
.br
.ti -1c
.RI "static char \fBdownInstruction\fP = 'D'"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBGame\fP utility class with handy functionalities can be used in the game
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 22 of file GameUtil\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "static double [] ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.average (int [] p1, int [] p2)\fC [static]\fP"
find the average of the two coordinates
.PP
\fBParameters:\fP
.RS 4
\fIp1\fP 
.br
\fIp2\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 278 of file GameUtil\&.java\&.
.PP
.nf
278                                                      {
279     double[] result = new double[2];
280     result[0] = (double) (p1[0] + p2[0]) / 2;
281     result[1] = (double) (p1[1] + p2[1]) / 2;
282     return result;
283   }
.fi
.SS "static double ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.distanceFrom (int x, int y, double [] position)\fC [static]\fP"
find the distance from the starting point to two points
.PP
\fBParameters:\fP
.RS 4
\fIx\fP 
.br
\fIy\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 292 of file GameUtil\&.java\&.
.PP
.nf
292                                                                      {
293     return (Math\&.pow(Math\&.round(position[0]) - x, 2) + Math\&.pow(Math\&.round(position[1]) - y, 2));
294   }
.fi
.SS "static int ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.findClosestPointToRobot (int points[][])\fC [static]\fP"
find closest point from a set of points
.PP
\fBParameters:\fP
.RS 4
\fIpoints\fP a set of points 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 302 of file GameUtil\&.java\&.
.PP
.nf
302                                                             {
303     int minIndex = 0;
304     double distance = Integer\&.MAX_VALUE;
305 
306     for (int i = 0; i < points\&.length; i++) {
307       try {
308         double[] point = Odometer\&.getOdometer()\&.getXYT();
309         double thisDistance = distanceFrom(points[i][0], points[i][1], point);
310         if (thisDistance < distance) {
311           minIndex = i;
312           distance = thisDistance;
313         }
314       } catch (OdometerExceptions e) {
315         e\&.printStackTrace();
316       }
317     }
318     return minIndex;
319   }
.fi
.SS "static boolean ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.isIslandBoundary (int [] coor)\fC [static]\fP"
Check if a given point is boundary
.PP
\fBParameters:\fP
.RS 4
\fIcoor\fP the point to input 
.RE
.PP
\fBReturns:\fP
.RS 4
: whether the given point is on the boundary of an island 
.RE
.PP

.PP
Definition at line 327 of file GameUtil\&.java\&.
.PP
.nf
327                                                      {
328     int x = coor[0];
329     int y = coor[1];
330     boolean onLY = x == GameParameters\&.Island_LL[0]
331         && (y >= GameParameters\&.Island_LL[1] && y <= GameParameters\&.Island_UR[1]);
332     boolean onRY = x == GameParameters\&.Island_UR[0]
333         && (y >= GameParameters\&.Island_LL[1] && y <= GameParameters\&.Island_UR[1]);
334     boolean onLX = y == GameParameters\&.Island_LL[1]
335         && (x >= GameParameters\&.Island_LL[0] && x <= GameParameters\&.Island_UR[0]);
336     boolean onUX = y == GameParameters\&.Island_UR[1]
337         && (x >= GameParameters\&.Island_LL[0] && x <= GameParameters\&.Island_UR[0]);
338 
339     return onLY || onRY || onLX || onUX;
340   }
.fi
.SS "static boolean ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.isSafe (int [] coor)\fC [static]\fP"
check if one coordinate is safe based on (it is not a wall, tree or inside a tunnel)
.PP
\fBParameters:\fP
.RS 4
\fIcoor\fP coordinate array 
.RE
.PP
\fBReturns:\fP
.RS 4
: true if safe, false otherwise 
.RE
.PP

.PP
Definition at line 257 of file GameUtil\&.java\&.
.PP
.nf
257                                            {
258     int x = coor[0];
259     int y = coor[1];
260     boolean inTunnel = x >= GameParameters\&.TN_LL[0] && x <= GameParameters\&.TN_UR[0]
261         && y >= GameParameters\&.TN_LL[1] && y <= GameParameters\&.TN_UR[1];
262     boolean isTree = x == GameParameters\&.TREE_US[0] && y == GameParameters\&.TREE_US[1];
263     boolean outBound =
264         x <= 0 || x >= GameParameters\&.Grid_UR[0] || y <= 0 || y >= GameParameters\&.Grid_UR[1];
265     if (inTunnel || isTree || outBound) {
266       return false;
267     }
268     return true;
269   }
.fi
.SS "static void ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.playMusic ()\fC [static]\fP"

.PP
Definition at line 342 of file GameUtil\&.java\&.
.PP
.nf
342                                  {
343     Sound\&.playSample(new File("Pen\&.wav"), 100);
344   }
.fi
.SH "Member Data Documentation"
.PP 
.SS "char ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.downInstruction = 'D'\fC [static]\fP"

.PP
Definition at line 28 of file GameUtil\&.java\&.
.SS "char ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.leftInstruction = 'L'\fC [static]\fP"

.PP
Definition at line 25 of file GameUtil\&.java\&.
.SS "char ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.rightInstruction = 'R'\fC [static]\fP"

.PP
Definition at line 26 of file GameUtil\&.java\&.
.SS "PathFinder ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.searchingFinder\fC [static]\fP"

.PP
Definition at line 24 of file GameUtil\&.java\&.
.SS "PathFinder ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.startingFinder\fC [static]\fP"

.PP
Definition at line 23 of file GameUtil\&.java\&.
.SS "char ca\&.mcgill\&.ecse211\&.project\&.GameUtil\&.upInstruction = 'U'\fC [static]\fP"

.PP
Definition at line 27 of file GameUtil\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
